"""A hair clip made up of two parts"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/examples/01_stick_barrette.ipynb.

# %% auto 0
__all__ = ['arc_2d', 'arc_angle', 'to_tuple', 'conic_arc', 'hollow_arc', 'arc_3d']

# %% ../../../nbs/examples/01_stick_barrette.ipynb 4
from .. import *
from solid2 import *
from math import pi, cos, sin
from fastcore.all import *
from cmath import exp
import numpy as np

# %% ../../../nbs/examples/01_stick_barrette.ipynb 11
def arc_2d(r, start_angle, end_angle, thickness, step=0.5):
    angles = np.arange(np.deg2rad(start_angle), np.deg2rad(end_angle)+np.deg2rad(step), np.deg2rad(step))
    unit_points = np.stack([np.cos(angles), np.sin(angles)],axis=1)
    points = np.concat([r*unit_points, (r-thickness)*np.flip(unit_points, axis=0)])
    
    return polygon(points)

# %% ../../../nbs/examples/01_stick_barrette.ipynb 20
def arc_angle(arc_length, r, deg=False): return arc_length / r * (180/pi if deg else 1)

# %% ../../../nbs/examples/01_stick_barrette.ipynb 26
def to_tuple(c:complex):
    return (c.real, c.imag)

# %% ../../../nbs/examples/01_stick_barrette.ipynb 29
def conic_arc(r, l):
    r2 = r*2
    half_angle = arc_angle(l, r2, False)/2
    return circle(r=r) * polygon([[0,0], to_tuple(p1), to_tuple(p2)])

# %% ../../../nbs/examples/01_stick_barrette.ipynb 34
def hollow_arc(r, l, thickness): return conic_arc(r, l) - circle(r-thickness)

# %% ../../../nbs/examples/01_stick_barrette.ipynb 41
def arc_3d(r, l, thickness, height): return linear_extrude(height)(hollow_arc(r, l, thickness))
